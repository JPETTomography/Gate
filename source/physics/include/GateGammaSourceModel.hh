/**
 *  @copyright Copyright 2016 The J-PET Gate Authors. All rights reserved.
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 *
 *  @file GateGammaSourceModel.hh
 */

#ifndef GATEGAMMASOURCEMDEL_HH
#define GATEGAMMASOURCEMDEL_HH

#include<iostream>
#include <vector>
#include "G4PrimaryParticle.hh"
#include "TLorentzVector.h"
#include "TVector3.h"
//#include "GateJPETSourceManager.hh"
//#include "GateJPETSource.hh"

/** Author: Mateusz Ba≈Ça
 *  Email: bala.mateusz@gmail.com
 *  About class: Clear abstract class which provide source of particles from any process
 *  			Your task is to wire class inherit this one and write working GetGammaParticles function.
 * */
class GateGammaSourceModel
{
	public:
		GateGammaSourceModel();
		virtual ~GateGammaSourceModel();
		/** Each particle is filled with data about momentum.
		 * @param: particles - list with initialized particles - without momentum information
		 * */
		virtual void GetGammaParticles(std::vector<G4PrimaryParticle*>& particles) = 0;

		/** Return particles number - it is number of particles generated by each model class
		 * */
		int GetParticlesNumber();

		/** Set positron momentum.
		 * @param: boost - positron boost
		 * */
		void SetPositronMomentum(TVector3 boost);
		/** Return model name.
		 * @return: model name - it's always simple string
		 * */
		virtual G4String GetModelName()=0;

		virtual void SetPolarization(G4ThreeVector  pol);

		int mParticlesNumber;
		TVector3 PositronMomentum;
		G4ThreeVector mPolarization;
};

#endif
